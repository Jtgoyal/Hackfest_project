{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chhat\\\\supersonicsteam\\\\TaskFrontend\\\\event-sentiment-dashboard\\\\src\\\\components\\\\PriorityAlert.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Box, Typography, Button, Paper, Chip, IconButton, Collapse, Slide, Snackbar, Alert, Divider, Badge, Stack, Dialog, DialogTitle, DialogContent, DialogActions, TextField, MenuItem, Select, FormControl, InputLabel, List, ListItem, ListItemText, Avatar, ListItemAvatar, Tooltip } from '@mui/material';\nimport { Error as ErrorIcon, Warning as WarningIcon, Info as InfoIcon, PersonAdd as PersonAddIcon, Check as CheckIcon, NotificationsActive as NotificationsActiveIcon, Block as BlockIcon, History as HistoryIcon, Refresh as RefreshIcon } from '@mui/icons-material';\n\n// Define severity levels and colors\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SEVERITY = {\n  CRITICAL: {\n    level: 'critical',\n    color: '#d32f2f',\n    icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 58\n    }, this),\n    badge: '#d32f2f'\n  },\n  HIGH: {\n    level: 'high',\n    color: '#f44336',\n    icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 50\n    }, this),\n    badge: '#f44336'\n  },\n  MEDIUM: {\n    level: 'medium',\n    color: '#ff9800',\n    icon: /*#__PURE__*/_jsxDEV(WarningIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 54\n    }, this),\n    badge: '#ff9800'\n  },\n  LOW: {\n    level: 'low',\n    color: '#2196f3',\n    icon: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 48\n    }, this),\n    badge: '#2196f3'\n  }\n};\n\n// Define alert interface\n\n// Define staff member interface\n\n// Mock available staff\nconst AVAILABLE_STAFF = [{\n  id: 'staff1',\n  name: 'Alex Johnson',\n  role: 'Technical Support',\n  isAvailable: true\n}, {\n  id: 'staff2',\n  name: 'Jamie Smith',\n  role: 'Event Coordinator',\n  isAvailable: true\n}, {\n  id: 'staff3',\n  name: 'Taylor Wilson',\n  role: 'Customer Service',\n  isAvailable: false\n}, {\n  id: 'staff4',\n  name: 'Morgan Lee',\n  role: 'AV Specialist',\n  isAvailable: true\n}];\n\n// Sample alert data\nconst INITIAL_ALERTS = [{\n  id: 'alert-1',\n  message: 'Audio system failure in Hall B',\n  details: 'Multiple attendees reporting complete audio loss during keynote presentation',\n  source: 'In-app feedback',\n  timestamp: new Date(Date.now() - 10 * 60000),\n  // 10 minutes ago\n  severity: 'CRITICAL',\n  isResolved: false,\n  actions: ['Check power supply', 'Test backup microphones', 'Contact AV team']\n}, {\n  id: 'alert-2',\n  message: 'WiFi connectivity issues in East Wing',\n  details: 'Attendees unable to connect to conference WiFi network in exhibition area',\n  source: 'Twitter mentions',\n  timestamp: new Date(Date.now() - 25 * 60000),\n  // 25 minutes ago\n  severity: 'HIGH',\n  isResolved: false,\n  actions: ['Reset routers', 'Check bandwidth utilization', 'Deploy mobile hotspots']\n}, {\n  id: 'alert-3',\n  message: 'Registration queue exceeding 30 minutes',\n  details: 'Entrance queue has grown to over 100 people with long wait times',\n  source: 'Staff report',\n  timestamp: new Date(Date.now() - 40 * 60000),\n  // 40 minutes ago\n  severity: 'MEDIUM',\n  isResolved: true,\n  assignedTo: 'staff2',\n  actions: ['Open additional registration desks', 'Deploy mobile check-in staff']\n}];\n\n// Mock WebSocket class for simulation purposes\nclass MockWebSocket {\n  constructor(url) {\n    this.callbacks = {};\n    this.intervalId = null;\n    console.log(`WebSocket connected to ${url}`);\n\n    // Simulate receiving messages\n    this.intervalId = setInterval(() => {\n      // 20% chance of sending a new alert\n      if (Math.random() < 0.2 && this.callbacks['message']) {\n        const newAlert = this.generateRandomAlert();\n        this.callbacks['message']({\n          data: JSON.stringify(newAlert)\n        });\n      }\n    }, 15000); // Check every 15 seconds\n  }\n  addEventListener(event, callback) {\n    this.callbacks[event] = callback;\n  }\n  removeEventListener(event) {\n    delete this.callbacks[event];\n  }\n  close() {\n    if (this.intervalId) {\n      clearInterval(this.intervalId);\n      this.intervalId = null;\n    }\n    console.log('WebSocket closed');\n  }\n  generateRandomAlert() {\n    const severityOptions = ['LOW', 'MEDIUM', 'HIGH', 'CRITICAL'];\n    const randomSeverity = severityOptions[Math.floor(Math.random() * 4)];\n    const alertMessages = [{\n      message: 'Food shortage at main catering station',\n      details: 'Running low on lunch options at Hall A station'\n    }, {\n      message: 'Overcrowding in Workshop Room 3',\n      details: 'Room capacity exceeded by approximately 20 attendees'\n    }, {\n      message: 'Parking lot A reaching capacity',\n      details: 'Less than 10% of parking spaces remaining'\n    }, {\n      message: 'Scheduled speaker delayed in traffic',\n      details: 'Afternoon keynote speaker may be 15-20 minutes late'\n    }, {\n      message: 'Projector malfunction in Breakout Room B',\n      details: 'Presentation equipment not responding to inputs'\n    }];\n    const randomMessage = alertMessages[Math.floor(Math.random() * alertMessages.length)];\n    const sources = ['Twitter mentions', 'In-app feedback', 'Staff report', 'Email notification', 'SMS alert'];\n    return {\n      id: `alert-${Date.now()}`,\n      message: randomMessage.message,\n      details: randomMessage.details,\n      source: sources[Math.floor(Math.random() * sources.length)],\n      timestamp: new Date(),\n      severity: randomSeverity,\n      isResolved: false,\n      actions: ['Investigate', 'Assign staff', 'Monitor situation']\n    };\n  }\n}\n\n// Configure service worker\nconst registerServiceWorker = async () => {\n  if ('serviceWorker' in navigator) {\n    try {\n      const registration = await navigator.serviceWorker.register('/service-worker.js');\n      console.log('Service worker registered:', registration);\n      return registration;\n    } catch (error) {\n      console.error('Service worker registration failed:', error);\n      return null;\n    }\n  }\n  return null;\n};\n\n// Request notification permission\nconst requestNotificationPermission = async () => {\n  if ('Notification' in window) {\n    const permission = await Notification.requestPermission();\n    return permission === 'granted';\n  }\n  return false;\n};\nconst PriorityAlert = () => {\n  _s();\n  const [alerts, setAlerts] = useState(INITIAL_ALERTS);\n  const [alertHistory, setAlertHistory] = useState([]);\n  const [activeAlert, setActiveAlert] = useState(null);\n  const [showNotification, setShowNotification] = useState(false);\n  const [notificationMessage, setNotificationMessage] = useState('');\n  const [showAssignDialog, setShowAssignDialog] = useState(false);\n  const [selectedStaff, setSelectedStaff] = useState('');\n  const [showHistory, setShowHistory] = useState(false);\n  const [notificationsEnabled, setNotificationsEnabled] = useState(false);\n  const webSocketRef = useRef(null);\n\n  // Initialize WebSocket connection\n  useEffect(() => {\n    // In a real app, this would be your WebSocket endpoint\n    const wsUrl = 'ws://event-server.example/alerts';\n    webSocketRef.current = new MockWebSocket(wsUrl);\n\n    // Handle incoming messages\n    webSocketRef.current.addEventListener('message', event => {\n      try {\n        const newAlert = JSON.parse(event.data);\n\n        // Add the new alert\n        setAlerts(prevAlerts => [newAlert, ...prevAlerts]);\n\n        // Show notification\n        if (notificationsEnabled) {\n          showPushNotification(newAlert);\n        }\n\n        // Show in-app notification\n        setNotificationMessage(`New ${newAlert.severity.toLowerCase()} alert: ${newAlert.message}`);\n        setShowNotification(true);\n      } catch (error) {\n        console.error('Error processing WebSocket message:', error);\n      }\n    });\n\n    // Clean up WebSocket connection\n    return () => {\n      if (webSocketRef.current) {\n        webSocketRef.current.removeEventListener('message');\n        webSocketRef.current.close();\n      }\n    };\n  }, [notificationsEnabled]);\n\n  // Initialize service worker and request notification permission\n  useEffect(() => {\n    const initializeNotifications = async () => {\n      await registerServiceWorker();\n      const permissionGranted = await requestNotificationPermission();\n      setNotificationsEnabled(permissionGranted);\n    };\n    initializeNotifications();\n  }, []);\n\n  // Show push notification\n  const showPushNotification = alert => {\n    if ('Notification' in window && Notification.permission === 'granted') {\n      const notification = new Notification('Event Alert', {\n        body: alert.message,\n        icon: '/logo192.png',\n        // Path to your notification icon\n        tag: alert.id\n      });\n      notification.onclick = () => {\n        window.focus();\n        setActiveAlert(alert);\n      };\n    }\n  };\n\n  // Mark alert as resolved\n  const handleResolveAlert = useCallback(alertId => {\n    setAlerts(prevAlerts => prevAlerts.map(alert => alert.id === alertId ? {\n      ...alert,\n      isResolved: true\n    } : alert));\n\n    // Add to history if it's the active alert\n    if (activeAlert && activeAlert.id === alertId) {\n      const resolvedAlert = {\n        ...activeAlert,\n        isResolved: true\n      };\n      setAlertHistory(prev => [resolvedAlert, ...prev]);\n      setActiveAlert(null);\n    }\n\n    // Show notification\n    setNotificationMessage('Alert marked as resolved');\n    setShowNotification(true);\n  }, [activeAlert]);\n\n  // Open assign staff dialog\n  const handleOpenAssignDialog = useCallback(alert => {\n    setActiveAlert(alert);\n    setShowAssignDialog(true);\n  }, []);\n\n  // Handle staff selection\n  const handleStaffChange = event => {\n    setSelectedStaff(event.target.value);\n  };\n\n  // Assign staff to alert\n  const handleAssignStaff = () => {\n    if (activeAlert && selectedStaff) {\n      setAlerts(prevAlerts => prevAlerts.map(alert => alert.id === activeAlert.id ? {\n        ...alert,\n        assignedTo: selectedStaff\n      } : alert));\n\n      // Update active alert\n      setActiveAlert(prev => prev ? {\n        ...prev,\n        assignedTo: selectedStaff\n      } : null);\n\n      // Close dialog\n      setShowAssignDialog(false);\n      setSelectedStaff('');\n\n      // Show notification\n      setNotificationMessage('Staff assigned to alert');\n      setShowNotification(true);\n    }\n  };\n\n  // Ignore/dismiss alert\n  const handleIgnoreAlert = useCallback(alertId => {\n    // Move to history\n    const alertToIgnore = alerts.find(a => a.id === alertId);\n    if (alertToIgnore) {\n      setAlertHistory(prev => [{\n        ...alertToIgnore,\n        isResolved: true\n      }, ...prev]);\n    }\n\n    // Remove from active alerts\n    setAlerts(prevAlerts => prevAlerts.filter(alert => alert.id !== alertId));\n\n    // Clear active alert if needed\n    if (activeAlert && activeAlert.id === alertId) {\n      setActiveAlert(null);\n    }\n\n    // Show notification\n    setNotificationMessage('Alert dismissed');\n    setShowNotification(true);\n  }, [activeAlert, alerts]);\n\n  // View alert details\n  const handleViewAlert = useCallback(alert => {\n    setActiveAlert(alert);\n  }, []);\n\n  // Close notification\n  const handleCloseNotification = () => {\n    setShowNotification(false);\n  };\n\n  // Get severity level styling\n  const getSeverityStyle = severity => {\n    const severityInfo = SEVERITY[severity];\n    return {\n      color: severityInfo.color,\n      borderColor: severityInfo.color,\n      icon: severityInfo.icon,\n      badge: severityInfo.badge\n    };\n  };\n\n  // Get formatted time (e.g., \"10 min ago\")\n  const getFormattedTime = timestamp => {\n    try {\n      const now = new Date();\n      let date;\n\n      // Handle if timestamp is already a date object or a string\n      if (timestamp instanceof Date) {\n        date = timestamp;\n      } else if (typeof timestamp === 'string') {\n        // If it's a string, try to parse it\n        date = new Date(timestamp);\n      } else {\n        // If not a valid format, return the original\n        return String(timestamp);\n      }\n\n      // Check if date is valid\n      if (isNaN(date.getTime())) {\n        return String(timestamp);\n      }\n      const diffMs = now.getTime() - date.getTime();\n      const diffMins = Math.round(diffMs / 60000);\n      if (diffMins < 1) return 'just now';\n      if (diffMins < 60) return `${diffMins} min ago`;\n      const diffHours = Math.round(diffMins / 60);\n      if (diffHours < 24) return `${diffHours}h ago`;\n      return date.toLocaleDateString();\n    } catch (error) {\n      console.error('Error formatting time:', error);\n      return String(timestamp);\n    }\n  };\n\n  // Filter active (unresolved) alerts\n  const activeAlerts = alerts.filter(alert => !alert.isResolved);\n\n  // Count alerts by severity\n  const criticalCount = activeAlerts.filter(alert => alert.severity === 'CRITICAL').length;\n  const highCount = activeAlerts.filter(alert => alert.severity === 'HIGH').length;\n  const mediumCount = activeAlerts.filter(alert => alert.severity === 'MEDIUM').length;\n  const lowCount = activeAlerts.filter(alert => alert.severity === 'LOW').length;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [\"Priority Alerts\", /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: activeAlerts.length,\n          color: \"error\",\n          sx: {\n            ml: 1\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        gap: 1,\n        children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n          title: \"View alert history\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            onClick: () => setShowHistory(true),\n            children: /*#__PURE__*/_jsxDEV(HistoryIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 440,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: notificationsEnabled ? \"Notifications enabled\" : \"Enable notifications\",\n          children: /*#__PURE__*/_jsxDEV(IconButton, {\n            size: \"small\",\n            color: notificationsEnabled ? \"primary\" : \"default\",\n            onClick: async () => {\n              if (!notificationsEnabled) {\n                const permissionGranted = await requestNotificationPermission();\n                setNotificationsEnabled(permissionGranted);\n              }\n            },\n            children: /*#__PURE__*/_jsxDEV(NotificationsActiveIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 444,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 443,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 427,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      direction: \"row\",\n      spacing: 1,\n      mb: 2,\n      flexWrap: \"wrap\",\n      children: [criticalCount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 19\n        }, this),\n        label: `${criticalCount} Critical`,\n        sx: {\n          bgcolor: 'rgba(211, 47, 47, 0.1)',\n          color: '#d32f2f',\n          fontWeight: 'medium',\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 11\n      }, this), highCount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(ErrorIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 476,\n          columnNumber: 19\n        }, this),\n        label: `${highCount} High`,\n        sx: {\n          bgcolor: 'rgba(244, 67, 54, 0.1)',\n          color: '#f44336',\n          fontWeight: 'medium',\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }, this), mediumCount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(WarningIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 19\n        }, this),\n        label: `${mediumCount} Medium`,\n        sx: {\n          bgcolor: 'rgba(255, 152, 0, 0.1)',\n          color: '#ff9800',\n          fontWeight: 'medium',\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 11\n      }, this), lowCount > 0 && /*#__PURE__*/_jsxDEV(Chip, {\n        icon: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 19\n        }, this),\n        label: `${lowCount} Low`,\n        sx: {\n          bgcolor: 'rgba(33, 150, 243, 0.1)',\n          color: '#2196f3',\n          fontWeight: 'medium',\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 7\n    }, this), activeAlerts.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        width: '100%',\n        bgcolor: 'background.paper'\n      },\n      children: activeAlerts.map(alert => {\n        var _AVAILABLE_STAFF$find;\n        const severityStyle = getSeverityStyle(alert.severity);\n        return /*#__PURE__*/_jsxDEV(Slide, {\n          direction: \"right\",\n          in: true,\n          mountOnEnter: true,\n          unmountOnExit: true,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 2,\n            sx: {\n              mb: 2,\n              borderLeft: 4,\n              borderColor: severityStyle.color,\n              transition: 'all 0.3s ease-in-out',\n              '&:hover': {\n                boxShadow: 3\n              }\n            },\n            children: [/*#__PURE__*/_jsxDEV(ListItem, {\n              alignItems: \"flex-start\",\n              sx: {\n                py: 1\n              },\n              secondaryAction: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Mark as resolved\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"resolve\",\n                    onClick: () => handleResolveAlert(alert.id),\n                    size: \"small\",\n                    sx: {\n                      color: 'success.main'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(CheckIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 537,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 536,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Assign staff\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"assign\",\n                    onClick: () => handleOpenAssignDialog(alert),\n                    size: \"small\",\n                    sx: {\n                      color: 'primary.main'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(PersonAddIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 555,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 548,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 547,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                  title: \"Dismiss alert\",\n                  children: /*#__PURE__*/_jsxDEV(IconButton, {\n                    edge: \"end\",\n                    \"aria-label\": \"ignore\",\n                    onClick: () => handleIgnoreAlert(alert.id),\n                    size: \"small\",\n                    sx: {\n                      color: 'text.secondary'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(BlockIcon, {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 566,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 558,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 535,\n                columnNumber: 23\n              }, this),\n              children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  sx: {\n                    bgcolor: severityStyle.color\n                  },\n                  children: severityStyle.icon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 573,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                primary: /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  gap: 1,\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"subtitle1\",\n                    component: \"span\",\n                    sx: {\n                      fontWeight: 'medium'\n                    },\n                    children: alert.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 580,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                    label: alert.severity,\n                    size: \"small\",\n                    sx: {\n                      bgcolor: `${severityStyle.color}20`,\n                      color: severityStyle.color,\n                      fontWeight: 'medium',\n                      fontSize: '0.7rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 583,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 579,\n                  columnNumber: 25\n                }, this),\n                secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    color: \"text.primary\",\n                    sx: {\n                      my: 0.5\n                    },\n                    children: alert.details\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 597,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"center\",\n                    mt: 0.5,\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        color: \"text.secondary\",\n                        component: \"span\",\n                        children: [\"Source: \", alert.source]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 606,\n                        columnNumber: 31\n                      }, this), alert.assignedTo && /*#__PURE__*/_jsxDEV(Chip, {\n                        label: `Assigned: ${((_AVAILABLE_STAFF$find = AVAILABLE_STAFF.find(s => s.id === alert.assignedTo)) === null || _AVAILABLE_STAFF$find === void 0 ? void 0 : _AVAILABLE_STAFF$find.name) || 'Staff'}`,\n                        size: \"small\",\n                        sx: {\n                          ml: 1,\n                          fontSize: '0.7rem'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 614,\n                        columnNumber: 33\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 605,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"caption\",\n                      color: \"text.secondary\",\n                      children: getFormattedTime(alert.timestamp)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 621,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 604,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 577,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 19\n            }, this), alert.actions && alert.actions.length > 0 && /*#__PURE__*/_jsxDEV(Collapse, {\n              in: true,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                px: 2,\n                pb: 1,\n                children: [/*#__PURE__*/_jsxDEV(Divider, {\n                  sx: {\n                    my: 1\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 637,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: \"Recommended actions:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 638,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  display: \"flex\",\n                  flexWrap: \"wrap\",\n                  gap: 0.5,\n                  mt: 0.5,\n                  children: alert.actions.map((action, idx) => /*#__PURE__*/_jsxDEV(Chip, {\n                    label: action,\n                    size: \"small\",\n                    variant: \"outlined\",\n                    sx: {\n                      fontSize: '0.7rem'\n                    }\n                  }, idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 643,\n                    columnNumber: 29\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 641,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 636,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 519,\n            columnNumber: 17\n          }, this)\n        }, alert.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 1,\n      sx: {\n        p: 3,\n        textAlign: 'center',\n        color: 'text.secondary',\n        bgcolor: 'background.default'\n      },\n      children: [/*#__PURE__*/_jsxDEV(RefreshIcon, {\n        sx: {\n          fontSize: 40,\n          opacity: 0.3,\n          mb: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: \"No active alerts at this time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 671,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showAssignDialog,\n      onClose: () => setShowAssignDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Assign Staff to Alert\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 677,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"subtitle1\",\n          gutterBottom: true,\n          children: activeAlert === null || activeAlert === void 0 ? void 0 : activeAlert.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          paragraph: true,\n          children: activeAlert === null || activeAlert === void 0 ? void 0 : activeAlert.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          sx: {\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"staff-select-label\",\n            children: \"Assign staff member\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 689,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"staff-select-label\",\n            value: selectedStaff,\n            label: \"Assign staff member\",\n            onChange: handleStaffChange,\n            children: AVAILABLE_STAFF.map(staff => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: staff.id,\n              disabled: !staff.isAvailable,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body1\",\n                  children: staff.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 703,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"caption\",\n                  color: \"text.secondary\",\n                  children: [staff.role, \" \", !staff.isAvailable && '(Unavailable)']\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 704,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 702,\n                columnNumber: 19\n              }, this)\n            }, staff.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 690,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          margin: \"normal\",\n          fullWidth: true,\n          label: \"Additional instructions (optional)\",\n          multiline: true,\n          rows: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 713,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 680,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowAssignDialog(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 722,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleAssignStaff,\n          variant: \"contained\",\n          color: \"primary\",\n          disabled: !selectedStaff,\n          children: \"Assign\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 721,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 676,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: showHistory,\n      onClose: () => setShowHistory(false),\n      fullWidth: true,\n      maxWidth: \"md\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Alert History\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        dividers: true,\n        children: alertHistory.length > 0 ? /*#__PURE__*/_jsxDEV(List, {\n          children: alertHistory.map(alert => {\n            const severityStyle = getSeverityStyle(alert.severity);\n            return /*#__PURE__*/_jsxDEV(Paper, {\n              elevation: 1,\n              sx: {\n                mb: 2,\n                borderLeft: 4,\n                borderColor: severityStyle.color,\n                opacity: 0.8\n              },\n              children: /*#__PURE__*/_jsxDEV(ListItem, {\n                alignItems: \"flex-start\",\n                children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n                  children: /*#__PURE__*/_jsxDEV(Avatar, {\n                    sx: {\n                      bgcolor: severityStyle.color\n                    },\n                    children: severityStyle.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 762,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 761,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    gap: 1,\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"subtitle1\",\n                      component: \"span\",\n                      children: alert.message\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 769,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      label: alert.severity,\n                      size: \"small\",\n                      sx: {\n                        bgcolor: `${severityStyle.color}20`,\n                        color: severityStyle.color,\n                        fontWeight: 'medium',\n                        fontSize: '0.7rem'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 772,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                      label: \"Resolved\",\n                      size: \"small\",\n                      color: \"success\",\n                      variant: \"outlined\",\n                      sx: {\n                        fontSize: '0.7rem'\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 782,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 768,\n                    columnNumber: 27\n                  }, this),\n                  secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      color: \"text.primary\",\n                      sx: {\n                        my: 0.5\n                      },\n                      children: alert.details\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 793,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(Box, {\n                      display: \"flex\",\n                      justifyContent: \"space-between\",\n                      alignItems: \"center\",\n                      mt: 0.5,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        color: \"text.secondary\",\n                        children: [\"Source: \", alert.source]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 801,\n                        columnNumber: 31\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"caption\",\n                        color: \"text.secondary\",\n                        children: typeof alert.timestamp === 'string' ? alert.timestamp : alert.timestamp.toLocaleString()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 807,\n                        columnNumber: 31\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 800,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 792,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 760,\n                columnNumber: 21\n              }, this)\n            }, alert.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            p: 3,\n            textAlign: 'center',\n            color: 'text.secondary'\n          },\n          children: [/*#__PURE__*/_jsxDEV(HistoryIcon, {\n            sx: {\n              fontSize: 40,\n              opacity: 0.3,\n              mb: 1\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            children: \"No alert history available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 744,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setShowHistory(false),\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 832,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 831,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: showNotification,\n      autoHideDuration: 5000,\n      onClose: handleCloseNotification,\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'right'\n      },\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: handleCloseNotification,\n        severity: \"info\",\n        variant: \"filled\",\n        sx: {\n          width: '100%'\n        },\n        children: notificationMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 837,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 426,\n    columnNumber: 5\n  }, this);\n};\n_s(PriorityAlert, \"kBXsQ+5Bmybfqm689N1vD9wFCK8=\");\n_c = PriorityAlert;\nexport default PriorityAlert;\nvar _c;\n$RefreshReg$(_c, \"PriorityAlert\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Box","Typography","Button","Paper","Chip","IconButton","Collapse","Slide","Snackbar","Alert","Divider","Badge","Stack","Dialog","DialogTitle","DialogContent","DialogActions","TextField","MenuItem","Select","FormControl","InputLabel","List","ListItem","ListItemText","Avatar","ListItemAvatar","Tooltip","Error","ErrorIcon","Warning","WarningIcon","Info","InfoIcon","PersonAdd","PersonAddIcon","Check","CheckIcon","NotificationsActive","NotificationsActiveIcon","Block","BlockIcon","History","HistoryIcon","Refresh","RefreshIcon","jsxDEV","_jsxDEV","SEVERITY","CRITICAL","level","color","icon","fileName","_jsxFileName","lineNumber","columnNumber","badge","HIGH","MEDIUM","LOW","AVAILABLE_STAFF","id","name","role","isAvailable","INITIAL_ALERTS","message","details","source","timestamp","Date","now","severity","isResolved","actions","assignedTo","MockWebSocket","constructor","url","callbacks","intervalId","console","log","setInterval","Math","random","newAlert","generateRandomAlert","data","JSON","stringify","addEventListener","event","callback","removeEventListener","close","clearInterval","severityOptions","randomSeverity","floor","alertMessages","randomMessage","length","sources","registerServiceWorker","navigator","registration","serviceWorker","register","error","requestNotificationPermission","window","permission","Notification","requestPermission","PriorityAlert","_s","alerts","setAlerts","alertHistory","setAlertHistory","activeAlert","setActiveAlert","showNotification","setShowNotification","notificationMessage","setNotificationMessage","showAssignDialog","setShowAssignDialog","selectedStaff","setSelectedStaff","showHistory","setShowHistory","notificationsEnabled","setNotificationsEnabled","webSocketRef","wsUrl","current","parse","prevAlerts","showPushNotification","toLowerCase","initializeNotifications","permissionGranted","alert","notification","body","tag","onclick","focus","handleResolveAlert","alertId","map","resolvedAlert","prev","handleOpenAssignDialog","handleStaffChange","target","value","handleAssignStaff","handleIgnoreAlert","alertToIgnore","find","a","filter","handleViewAlert","handleCloseNotification","getSeverityStyle","severityInfo","borderColor","getFormattedTime","date","String","isNaN","getTime","diffMs","diffMins","round","diffHours","toLocaleDateString","activeAlerts","criticalCount","highCount","mediumCount","lowCount","children","display","justifyContent","alignItems","mb","variant","gutterBottom","badgeContent","sx","ml","gap","title","size","onClick","fontSize","direction","spacing","flexWrap","label","bgcolor","fontWeight","width","_AVAILABLE_STAFF$find","severityStyle","in","mountOnEnter","unmountOnExit","elevation","borderLeft","transition","boxShadow","py","secondaryAction","edge","primary","component","secondary","Fragment","my","mt","s","px","pb","action","idx","p","textAlign","opacity","open","onClose","dividers","paragraph","fullWidth","labelId","onChange","staff","disabled","margin","multiline","rows","maxWidth","toLocaleString","autoHideDuration","anchorOrigin","vertical","horizontal","_c","$RefreshReg$"],"sources":["C:/Users/chhat/supersonicsteam/TaskFrontend/event-sentiment-dashboard/src/components/PriorityAlert.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Paper,\r\n  Chip,\r\n  IconButton,\r\n  Collapse,\r\n  Slide,\r\n  Snackbar,\r\n  Alert,\r\n  Divider,\r\n  Badge,\r\n  Stack,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  MenuItem,\r\n  Select,\r\n  FormControl,\r\n  InputLabel,\r\n  SelectChangeEvent,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Avatar,\r\n  ListItemAvatar,\r\n  Tooltip\r\n} from '@mui/material';\r\nimport {\r\n  Error as ErrorIcon,\r\n  Warning as WarningIcon,\r\n  Info as InfoIcon,\r\n  PersonAdd as PersonAddIcon,\r\n  Check as CheckIcon,\r\n  NotificationsActive as NotificationsActiveIcon,\r\n  Close as CloseIcon,\r\n  Block as BlockIcon,\r\n  History as HistoryIcon,\r\n  Refresh as RefreshIcon\r\n} from '@mui/icons-material';\r\n\r\n// Define severity levels and colors\r\nconst SEVERITY = {\r\n  CRITICAL: { level: 'critical', color: '#d32f2f', icon: <ErrorIcon />, badge: '#d32f2f' },\r\n  HIGH: { level: 'high', color: '#f44336', icon: <ErrorIcon />, badge: '#f44336' },\r\n  MEDIUM: { level: 'medium', color: '#ff9800', icon: <WarningIcon />, badge: '#ff9800' },\r\n  LOW: { level: 'low', color: '#2196f3', icon: <InfoIcon />, badge: '#2196f3' }\r\n};\r\n\r\n// Define alert interface\r\ninterface PriorityAlertItem {\r\n  id: string;\r\n  message: string;\r\n  details: string;\r\n  source: string;\r\n  timestamp: Date;\r\n  severity: keyof typeof SEVERITY;\r\n  isResolved: boolean;\r\n  assignedTo?: string;\r\n  actions?: string[];\r\n}\r\n\r\n// Define staff member interface\r\ninterface StaffMember {\r\n  id: string;\r\n  name: string;\r\n  role: string;\r\n  isAvailable: boolean;\r\n}\r\n\r\n// Mock available staff\r\nconst AVAILABLE_STAFF: StaffMember[] = [\r\n  { id: 'staff1', name: 'Alex Johnson', role: 'Technical Support', isAvailable: true },\r\n  { id: 'staff2', name: 'Jamie Smith', role: 'Event Coordinator', isAvailable: true },\r\n  { id: 'staff3', name: 'Taylor Wilson', role: 'Customer Service', isAvailable: false },\r\n  { id: 'staff4', name: 'Morgan Lee', role: 'AV Specialist', isAvailable: true }\r\n];\r\n\r\n// Sample alert data\r\nconst INITIAL_ALERTS: PriorityAlertItem[] = [\r\n  {\r\n    id: 'alert-1',\r\n    message: 'Audio system failure in Hall B',\r\n    details: 'Multiple attendees reporting complete audio loss during keynote presentation',\r\n    source: 'In-app feedback',\r\n    timestamp: new Date(Date.now() - 10 * 60000), // 10 minutes ago\r\n    severity: 'CRITICAL',\r\n    isResolved: false,\r\n    actions: ['Check power supply', 'Test backup microphones', 'Contact AV team']\r\n  },\r\n  {\r\n    id: 'alert-2',\r\n    message: 'WiFi connectivity issues in East Wing',\r\n    details: 'Attendees unable to connect to conference WiFi network in exhibition area',\r\n    source: 'Twitter mentions',\r\n    timestamp: new Date(Date.now() - 25 * 60000), // 25 minutes ago\r\n    severity: 'HIGH',\r\n    isResolved: false,\r\n    actions: ['Reset routers', 'Check bandwidth utilization', 'Deploy mobile hotspots']\r\n  },\r\n  {\r\n    id: 'alert-3',\r\n    message: 'Registration queue exceeding 30 minutes',\r\n    details: 'Entrance queue has grown to over 100 people with long wait times',\r\n    source: 'Staff report',\r\n    timestamp: new Date(Date.now() - 40 * 60000), // 40 minutes ago\r\n    severity: 'MEDIUM',\r\n    isResolved: true,\r\n    assignedTo: 'staff2',\r\n    actions: ['Open additional registration desks', 'Deploy mobile check-in staff']\r\n  }\r\n];\r\n\r\n// Mock WebSocket class for simulation purposes\r\nclass MockWebSocket {\r\n  private callbacks: { [key: string]: (event: any) => void } = {};\r\n  private intervalId: NodeJS.Timeout | null = null;\r\n  \r\n  constructor(url: string) {\r\n    console.log(`WebSocket connected to ${url}`);\r\n    \r\n    // Simulate receiving messages\r\n    this.intervalId = setInterval(() => {\r\n      // 20% chance of sending a new alert\r\n      if (Math.random() < 0.2 && this.callbacks['message']) {\r\n        const newAlert = this.generateRandomAlert();\r\n        this.callbacks['message']({ data: JSON.stringify(newAlert) });\r\n      }\r\n    }, 15000); // Check every 15 seconds\r\n  }\r\n  \r\n  addEventListener(event: string, callback: (event: any) => void) {\r\n    this.callbacks[event] = callback;\r\n  }\r\n  \r\n  removeEventListener(event: string) {\r\n    delete this.callbacks[event];\r\n  }\r\n  \r\n  close() {\r\n    if (this.intervalId) {\r\n      clearInterval(this.intervalId);\r\n      this.intervalId = null;\r\n    }\r\n    console.log('WebSocket closed');\r\n  }\r\n  \r\n  private generateRandomAlert(): PriorityAlertItem {\r\n    const severityOptions: Array<keyof typeof SEVERITY> = ['LOW', 'MEDIUM', 'HIGH', 'CRITICAL'];\r\n    const randomSeverity = severityOptions[Math.floor(Math.random() * 4)];\r\n    \r\n    const alertMessages = [\r\n      { message: 'Food shortage at main catering station', details: 'Running low on lunch options at Hall A station' },\r\n      { message: 'Overcrowding in Workshop Room 3', details: 'Room capacity exceeded by approximately 20 attendees' },\r\n      { message: 'Parking lot A reaching capacity', details: 'Less than 10% of parking spaces remaining' },\r\n      { message: 'Scheduled speaker delayed in traffic', details: 'Afternoon keynote speaker may be 15-20 minutes late' },\r\n      { message: 'Projector malfunction in Breakout Room B', details: 'Presentation equipment not responding to inputs' }\r\n    ];\r\n    \r\n    const randomMessage = alertMessages[Math.floor(Math.random() * alertMessages.length)];\r\n    const sources = ['Twitter mentions', 'In-app feedback', 'Staff report', 'Email notification', 'SMS alert'];\r\n    \r\n    return {\r\n      id: `alert-${Date.now()}`,\r\n      message: randomMessage.message,\r\n      details: randomMessage.details,\r\n      source: sources[Math.floor(Math.random() * sources.length)],\r\n      timestamp: new Date(),\r\n      severity: randomSeverity,\r\n      isResolved: false,\r\n      actions: ['Investigate', 'Assign staff', 'Monitor situation']\r\n    };\r\n  }\r\n}\r\n\r\n// Configure service worker\r\nconst registerServiceWorker = async () => {\r\n  if ('serviceWorker' in navigator) {\r\n    try {\r\n      const registration = await navigator.serviceWorker.register('/service-worker.js');\r\n      console.log('Service worker registered:', registration);\r\n      return registration;\r\n    } catch (error) {\r\n      console.error('Service worker registration failed:', error);\r\n      return null;\r\n    }\r\n  }\r\n  return null;\r\n};\r\n\r\n// Request notification permission\r\nconst requestNotificationPermission = async () => {\r\n  if ('Notification' in window) {\r\n    const permission = await Notification.requestPermission();\r\n    return permission === 'granted';\r\n  }\r\n  return false;\r\n};\r\n\r\nconst PriorityAlert: React.FC = () => {\r\n  const [alerts, setAlerts] = useState<PriorityAlertItem[]>(INITIAL_ALERTS);\r\n  const [alertHistory, setAlertHistory] = useState<PriorityAlertItem[]>([]);\r\n  const [activeAlert, setActiveAlert] = useState<PriorityAlertItem | null>(null);\r\n  const [showNotification, setShowNotification] = useState<boolean>(false);\r\n  const [notificationMessage, setNotificationMessage] = useState<string>('');\r\n  const [showAssignDialog, setShowAssignDialog] = useState<boolean>(false);\r\n  const [selectedStaff, setSelectedStaff] = useState<string>('');\r\n  const [showHistory, setShowHistory] = useState<boolean>(false);\r\n  const [notificationsEnabled, setNotificationsEnabled] = useState<boolean>(false);\r\n  const webSocketRef = useRef<MockWebSocket | null>(null);\r\n  \r\n  // Initialize WebSocket connection\r\n  useEffect(() => {\r\n    // In a real app, this would be your WebSocket endpoint\r\n    const wsUrl = 'ws://event-server.example/alerts';\r\n    webSocketRef.current = new MockWebSocket(wsUrl);\r\n    \r\n    // Handle incoming messages\r\n    webSocketRef.current.addEventListener('message', (event) => {\r\n      try {\r\n        const newAlert = JSON.parse(event.data) as PriorityAlertItem;\r\n        \r\n        // Add the new alert\r\n        setAlerts(prevAlerts => [newAlert, ...prevAlerts]);\r\n        \r\n        // Show notification\r\n        if (notificationsEnabled) {\r\n          showPushNotification(newAlert);\r\n        }\r\n        \r\n        // Show in-app notification\r\n        setNotificationMessage(`New ${newAlert.severity.toLowerCase()} alert: ${newAlert.message}`);\r\n        setShowNotification(true);\r\n      } catch (error) {\r\n        console.error('Error processing WebSocket message:', error);\r\n      }\r\n    });\r\n    \r\n    // Clean up WebSocket connection\r\n    return () => {\r\n      if (webSocketRef.current) {\r\n        webSocketRef.current.removeEventListener('message');\r\n        webSocketRef.current.close();\r\n      }\r\n    };\r\n  }, [notificationsEnabled]);\r\n  \r\n  // Initialize service worker and request notification permission\r\n  useEffect(() => {\r\n    const initializeNotifications = async () => {\r\n      await registerServiceWorker();\r\n      const permissionGranted = await requestNotificationPermission();\r\n      setNotificationsEnabled(permissionGranted);\r\n    };\r\n    \r\n    initializeNotifications();\r\n  }, []);\r\n  \r\n  // Show push notification\r\n  const showPushNotification = (alert: PriorityAlertItem) => {\r\n    if ('Notification' in window && Notification.permission === 'granted') {\r\n      const notification = new Notification('Event Alert', {\r\n        body: alert.message,\r\n        icon: '/logo192.png', // Path to your notification icon\r\n        tag: alert.id\r\n      });\r\n      \r\n      notification.onclick = () => {\r\n        window.focus();\r\n        setActiveAlert(alert);\r\n      };\r\n    }\r\n  };\r\n  \r\n  // Mark alert as resolved\r\n  const handleResolveAlert = useCallback((alertId: string) => {\r\n    setAlerts(prevAlerts => \r\n      prevAlerts.map(alert => \r\n        alert.id === alertId \r\n          ? { ...alert, isResolved: true } \r\n          : alert\r\n      )\r\n    );\r\n    \r\n    // Add to history if it's the active alert\r\n    if (activeAlert && activeAlert.id === alertId) {\r\n      const resolvedAlert = { ...activeAlert, isResolved: true };\r\n      setAlertHistory(prev => [resolvedAlert, ...prev]);\r\n      setActiveAlert(null);\r\n    }\r\n    \r\n    // Show notification\r\n    setNotificationMessage('Alert marked as resolved');\r\n    setShowNotification(true);\r\n  }, [activeAlert]);\r\n  \r\n  // Open assign staff dialog\r\n  const handleOpenAssignDialog = useCallback((alert: PriorityAlertItem) => {\r\n    setActiveAlert(alert);\r\n    setShowAssignDialog(true);\r\n  }, []);\r\n  \r\n  // Handle staff selection\r\n  const handleStaffChange = (event: SelectChangeEvent) => {\r\n    setSelectedStaff(event.target.value);\r\n  };\r\n  \r\n  // Assign staff to alert\r\n  const handleAssignStaff = () => {\r\n    if (activeAlert && selectedStaff) {\r\n      setAlerts(prevAlerts => \r\n        prevAlerts.map(alert => \r\n          alert.id === activeAlert.id \r\n            ? { ...alert, assignedTo: selectedStaff } \r\n            : alert\r\n        )\r\n      );\r\n      \r\n      // Update active alert\r\n      setActiveAlert(prev => prev ? { ...prev, assignedTo: selectedStaff } : null);\r\n      \r\n      // Close dialog\r\n      setShowAssignDialog(false);\r\n      setSelectedStaff('');\r\n      \r\n      // Show notification\r\n      setNotificationMessage('Staff assigned to alert');\r\n      setShowNotification(true);\r\n    }\r\n  };\r\n  \r\n  // Ignore/dismiss alert\r\n  const handleIgnoreAlert = useCallback((alertId: string) => {\r\n    // Move to history\r\n    const alertToIgnore = alerts.find(a => a.id === alertId);\r\n    if (alertToIgnore) {\r\n      setAlertHistory(prev => [{ ...alertToIgnore, isResolved: true }, ...prev]);\r\n    }\r\n    \r\n    // Remove from active alerts\r\n    setAlerts(prevAlerts => prevAlerts.filter(alert => alert.id !== alertId));\r\n    \r\n    // Clear active alert if needed\r\n    if (activeAlert && activeAlert.id === alertId) {\r\n      setActiveAlert(null);\r\n    }\r\n    \r\n    // Show notification\r\n    setNotificationMessage('Alert dismissed');\r\n    setShowNotification(true);\r\n  }, [activeAlert, alerts]);\r\n  \r\n  // View alert details\r\n  const handleViewAlert = useCallback((alert: PriorityAlertItem) => {\r\n    setActiveAlert(alert);\r\n  }, []);\r\n  \r\n  // Close notification\r\n  const handleCloseNotification = () => {\r\n    setShowNotification(false);\r\n  };\r\n  \r\n  // Get severity level styling\r\n  const getSeverityStyle = (severity: keyof typeof SEVERITY) => {\r\n    const severityInfo = SEVERITY[severity];\r\n    return {\r\n      color: severityInfo.color,\r\n      borderColor: severityInfo.color,\r\n      icon: severityInfo.icon,\r\n      badge: severityInfo.badge\r\n    };\r\n  };\r\n  \r\n  // Get formatted time (e.g., \"10 min ago\")\r\n  const getFormattedTime = (timestamp: Date | string) => {\r\n    try {\r\n      const now = new Date();\r\n      let date: Date;\r\n      \r\n      // Handle if timestamp is already a date object or a string\r\n      if (timestamp instanceof Date) {\r\n        date = timestamp;\r\n      } else if (typeof timestamp === 'string') {\r\n        // If it's a string, try to parse it\r\n        date = new Date(timestamp);\r\n      } else {\r\n        // If not a valid format, return the original\r\n        return String(timestamp);\r\n      }\r\n      \r\n      // Check if date is valid\r\n      if (isNaN(date.getTime())) {\r\n        return String(timestamp);\r\n      }\r\n      \r\n      const diffMs = now.getTime() - date.getTime();\r\n      const diffMins = Math.round(diffMs / 60000);\r\n      \r\n      if (diffMins < 1) return 'just now';\r\n      if (diffMins < 60) return `${diffMins} min ago`;\r\n      \r\n      const diffHours = Math.round(diffMins / 60);\r\n      if (diffHours < 24) return `${diffHours}h ago`;\r\n      \r\n      return date.toLocaleDateString();\r\n    } catch (error) {\r\n      console.error('Error formatting time:', error);\r\n      return String(timestamp);\r\n    }\r\n  };\r\n  \r\n  // Filter active (unresolved) alerts\r\n  const activeAlerts = alerts.filter(alert => !alert.isResolved);\r\n  \r\n  // Count alerts by severity\r\n  const criticalCount = activeAlerts.filter(alert => alert.severity === 'CRITICAL').length;\r\n  const highCount = activeAlerts.filter(alert => alert.severity === 'HIGH').length;\r\n  const mediumCount = activeAlerts.filter(alert => alert.severity === 'MEDIUM').length;\r\n  const lowCount = activeAlerts.filter(alert => alert.severity === 'LOW').length;\r\n  \r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\r\n        <Typography variant=\"h6\" gutterBottom display=\"flex\" alignItems=\"center\">\r\n          Priority Alerts\r\n          <Badge \r\n            badgeContent={activeAlerts.length} \r\n            color=\"error\"\r\n            sx={{ ml: 1 }}\r\n          />\r\n        </Typography>\r\n        \r\n        <Box display=\"flex\" gap={1}>\r\n          <Tooltip title=\"View alert history\">\r\n            <IconButton size=\"small\" onClick={() => setShowHistory(true)}>\r\n              <HistoryIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n          <Tooltip title={notificationsEnabled ? \"Notifications enabled\" : \"Enable notifications\"}>\r\n            <IconButton \r\n              size=\"small\" \r\n              color={notificationsEnabled ? \"primary\" : \"default\"}\r\n              onClick={async () => {\r\n                if (!notificationsEnabled) {\r\n                  const permissionGranted = await requestNotificationPermission();\r\n                  setNotificationsEnabled(permissionGranted);\r\n                }\r\n              }}\r\n            >\r\n              <NotificationsActiveIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </Box>\r\n      </Box>\r\n      \r\n      {/* Alert summary chips */}\r\n      <Stack direction=\"row\" spacing={1} mb={2} flexWrap=\"wrap\">\r\n        {criticalCount > 0 && (\r\n          <Chip \r\n            icon={<ErrorIcon />} \r\n            label={`${criticalCount} Critical`} \r\n            sx={{ \r\n              bgcolor: 'rgba(211, 47, 47, 0.1)', \r\n              color: '#d32f2f', \r\n              fontWeight: 'medium',\r\n              mb: 1\r\n            }} \r\n          />\r\n        )}\r\n        {highCount > 0 && (\r\n          <Chip \r\n            icon={<ErrorIcon />} \r\n            label={`${highCount} High`} \r\n            sx={{ \r\n              bgcolor: 'rgba(244, 67, 54, 0.1)', \r\n              color: '#f44336', \r\n              fontWeight: 'medium',\r\n              mb: 1\r\n            }} \r\n          />\r\n        )}\r\n        {mediumCount > 0 && (\r\n          <Chip \r\n            icon={<WarningIcon />} \r\n            label={`${mediumCount} Medium`} \r\n            sx={{ \r\n              bgcolor: 'rgba(255, 152, 0, 0.1)', \r\n              color: '#ff9800', \r\n              fontWeight: 'medium',\r\n              mb: 1\r\n            }} \r\n          />\r\n        )}\r\n        {lowCount > 0 && (\r\n          <Chip \r\n            icon={<InfoIcon />} \r\n            label={`${lowCount} Low`} \r\n            sx={{ \r\n              bgcolor: 'rgba(33, 150, 243, 0.1)', \r\n              color: '#2196f3', \r\n              fontWeight: 'medium',\r\n              mb: 1\r\n            }} \r\n          />\r\n        )}\r\n      </Stack>\r\n      \r\n      {/* Active alert list */}\r\n      {activeAlerts.length > 0 ? (\r\n        <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\r\n          {activeAlerts.map((alert) => {\r\n            const severityStyle = getSeverityStyle(alert.severity);\r\n            return (\r\n              <Slide key={alert.id} direction=\"right\" in={true} mountOnEnter unmountOnExit>\r\n                <Paper \r\n                  elevation={2} \r\n                  sx={{ \r\n                    mb: 2, \r\n                    borderLeft: 4, \r\n                    borderColor: severityStyle.color,\r\n                    transition: 'all 0.3s ease-in-out',\r\n                    '&:hover': {\r\n                      boxShadow: 3\r\n                    }\r\n                  }}\r\n                >\r\n                  <ListItem \r\n                    alignItems=\"flex-start\"\r\n                    sx={{ py: 1 }}\r\n                    secondaryAction={\r\n                      <Box>\r\n                        <Tooltip title=\"Mark as resolved\">\r\n                          <IconButton \r\n                            edge=\"end\" \r\n                            aria-label=\"resolve\" \r\n                            onClick={() => handleResolveAlert(alert.id)}\r\n                            size=\"small\"\r\n                            sx={{ color: 'success.main' }}\r\n                          >\r\n                            <CheckIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Assign staff\">\r\n                          <IconButton \r\n                            edge=\"end\" \r\n                            aria-label=\"assign\" \r\n                            onClick={() => handleOpenAssignDialog(alert)}\r\n                            size=\"small\"\r\n                            sx={{ color: 'primary.main' }}\r\n                          >\r\n                            <PersonAddIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Dismiss alert\">\r\n                          <IconButton \r\n                            edge=\"end\" \r\n                            aria-label=\"ignore\" \r\n                            onClick={() => handleIgnoreAlert(alert.id)}\r\n                            size=\"small\"\r\n                            sx={{ color: 'text.secondary' }}\r\n                          >\r\n                            <BlockIcon />\r\n                          </IconButton>\r\n                        </Tooltip>\r\n                      </Box>\r\n                    }\r\n                  >\r\n                    <ListItemAvatar>\r\n                      <Avatar sx={{ bgcolor: severityStyle.color }}>\r\n                        {severityStyle.icon}\r\n                      </Avatar>\r\n                    </ListItemAvatar>\r\n                    <ListItemText\r\n                      primary={\r\n                        <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                          <Typography variant=\"subtitle1\" component=\"span\" sx={{ fontWeight: 'medium' }}>\r\n                            {alert.message}\r\n                          </Typography>\r\n                          <Chip \r\n                            label={alert.severity} \r\n                            size=\"small\" \r\n                            sx={{ \r\n                              bgcolor: `${severityStyle.color}20`, \r\n                              color: severityStyle.color,\r\n                              fontWeight: 'medium',\r\n                              fontSize: '0.7rem'\r\n                            }} \r\n                          />\r\n                        </Box>\r\n                      }\r\n                      secondary={\r\n                        <React.Fragment>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            color=\"text.primary\"\r\n                            sx={{ my: 0.5 }}\r\n                          >\r\n                            {alert.details}\r\n                          </Typography>\r\n                          <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mt={0.5}>\r\n                            <Box>\r\n                              <Typography\r\n                                variant=\"caption\"\r\n                                color=\"text.secondary\"\r\n                                component=\"span\"\r\n                              >\r\n                                Source: {alert.source}\r\n                              </Typography>\r\n                              {alert.assignedTo && (\r\n                                <Chip \r\n                                  label={`Assigned: ${AVAILABLE_STAFF.find(s => s.id === alert.assignedTo)?.name || 'Staff'}`} \r\n                                  size=\"small\" \r\n                                  sx={{ ml: 1, fontSize: '0.7rem' }} \r\n                                />\r\n                              )}\r\n                            </Box>\r\n                            <Typography\r\n                              variant=\"caption\"\r\n                              color=\"text.secondary\"\r\n                            >\r\n                              {getFormattedTime(alert.timestamp)}\r\n                            </Typography>\r\n                          </Box>\r\n                        </React.Fragment>\r\n                      }\r\n                    />\r\n                  </ListItem>\r\n                  \r\n                  {/* Recommended actions */}\r\n                  {alert.actions && alert.actions.length > 0 && (\r\n                    <Collapse in={true}>\r\n                      <Box px={2} pb={1}>\r\n                        <Divider sx={{ my: 1 }} />\r\n                        <Typography variant=\"caption\" color=\"text.secondary\">\r\n                          Recommended actions:\r\n                        </Typography>\r\n                        <Box display=\"flex\" flexWrap=\"wrap\" gap={0.5} mt={0.5}>\r\n                          {alert.actions.map((action, idx) => (\r\n                            <Chip \r\n                              key={idx} \r\n                              label={action} \r\n                              size=\"small\" \r\n                              variant=\"outlined\"\r\n                              sx={{ fontSize: '0.7rem' }}\r\n                            />\r\n                          ))}\r\n                        </Box>\r\n                      </Box>\r\n                    </Collapse>\r\n                  )}\r\n                </Paper>\r\n              </Slide>\r\n            );\r\n          })}\r\n        </List>\r\n      ) : (\r\n        <Paper \r\n          elevation={1} \r\n          sx={{ \r\n            p: 3, \r\n            textAlign: 'center', \r\n            color: 'text.secondary',\r\n            bgcolor: 'background.default'\r\n          }}\r\n        >\r\n          <RefreshIcon sx={{ fontSize: 40, opacity: 0.3, mb: 1 }} />\r\n          <Typography>No active alerts at this time</Typography>\r\n        </Paper>\r\n      )}\r\n      \r\n      {/* Staff assignment dialog */}\r\n      <Dialog open={showAssignDialog} onClose={() => setShowAssignDialog(false)}>\r\n        <DialogTitle>\r\n          Assign Staff to Alert\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <Typography variant=\"subtitle1\" gutterBottom>\r\n            {activeAlert?.message}\r\n          </Typography>\r\n          <Typography variant=\"body2\" color=\"text.secondary\" paragraph>\r\n            {activeAlert?.details}\r\n          </Typography>\r\n          \r\n          <FormControl fullWidth sx={{ mt: 2 }}>\r\n            <InputLabel id=\"staff-select-label\">Assign staff member</InputLabel>\r\n            <Select\r\n              labelId=\"staff-select-label\"\r\n              value={selectedStaff}\r\n              label=\"Assign staff member\"\r\n              onChange={handleStaffChange}\r\n            >\r\n              {AVAILABLE_STAFF.map((staff) => (\r\n                <MenuItem \r\n                  key={staff.id} \r\n                  value={staff.id}\r\n                  disabled={!staff.isAvailable}\r\n                >\r\n                  <Box>\r\n                    <Typography variant=\"body1\">{staff.name}</Typography>\r\n                    <Typography variant=\"caption\" color=\"text.secondary\">\r\n                      {staff.role} {!staff.isAvailable && '(Unavailable)'}\r\n                    </Typography>\r\n                  </Box>\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          \r\n          <TextField\r\n            margin=\"normal\"\r\n            fullWidth\r\n            label=\"Additional instructions (optional)\"\r\n            multiline\r\n            rows={2}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowAssignDialog(false)}>Cancel</Button>\r\n          <Button \r\n            onClick={handleAssignStaff} \r\n            variant=\"contained\" \r\n            color=\"primary\"\r\n            disabled={!selectedStaff}\r\n          >\r\n            Assign\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Alert history dialog */}\r\n      <Dialog \r\n        open={showHistory} \r\n        onClose={() => setShowHistory(false)}\r\n        fullWidth\r\n        maxWidth=\"md\"\r\n      >\r\n        <DialogTitle>\r\n          Alert History\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          {alertHistory.length > 0 ? (\r\n            <List>\r\n              {alertHistory.map((alert) => {\r\n                const severityStyle = getSeverityStyle(alert.severity);\r\n                return (\r\n                  <Paper \r\n                    key={alert.id} \r\n                    elevation={1} \r\n                    sx={{ \r\n                      mb: 2, \r\n                      borderLeft: 4, \r\n                      borderColor: severityStyle.color,\r\n                      opacity: 0.8\r\n                    }}\r\n                  >\r\n                    <ListItem alignItems=\"flex-start\">\r\n                      <ListItemAvatar>\r\n                        <Avatar sx={{ bgcolor: severityStyle.color }}>\r\n                          {severityStyle.icon}\r\n                        </Avatar>\r\n                      </ListItemAvatar>\r\n                      <ListItemText\r\n                        primary={\r\n                          <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n                            <Typography variant=\"subtitle1\" component=\"span\">\r\n                              {alert.message}\r\n                            </Typography>\r\n                            <Chip \r\n                              label={alert.severity} \r\n                              size=\"small\" \r\n                              sx={{ \r\n                                bgcolor: `${severityStyle.color}20`, \r\n                                color: severityStyle.color,\r\n                                fontWeight: 'medium',\r\n                                fontSize: '0.7rem'\r\n                              }} \r\n                            />\r\n                            <Chip \r\n                              label=\"Resolved\" \r\n                              size=\"small\" \r\n                              color=\"success\"\r\n                              variant=\"outlined\"\r\n                              sx={{ fontSize: '0.7rem' }} \r\n                            />\r\n                          </Box>\r\n                        }\r\n                        secondary={\r\n                          <React.Fragment>\r\n                            <Typography\r\n                              variant=\"body2\"\r\n                              color=\"text.primary\"\r\n                              sx={{ my: 0.5 }}\r\n                            >\r\n                              {alert.details}\r\n                            </Typography>\r\n                            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mt={0.5}>\r\n                              <Typography\r\n                                variant=\"caption\"\r\n                                color=\"text.secondary\"\r\n                              >\r\n                                Source: {alert.source}\r\n                              </Typography>\r\n                              <Typography\r\n                                variant=\"caption\"\r\n                                color=\"text.secondary\"\r\n                              >\r\n                                {typeof alert.timestamp === 'string' \r\n                                  ? alert.timestamp \r\n                                  : alert.timestamp.toLocaleString()}\r\n                              </Typography>\r\n                            </Box>\r\n                          </React.Fragment>\r\n                        }\r\n                      />\r\n                    </ListItem>\r\n                  </Paper>\r\n                );\r\n              })}\r\n            </List>\r\n          ) : (\r\n            <Box sx={{ p: 3, textAlign: 'center', color: 'text.secondary' }}>\r\n              <HistoryIcon sx={{ fontSize: 40, opacity: 0.3, mb: 1 }} />\r\n              <Typography>No alert history available</Typography>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setShowHistory(false)}>Close</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      \r\n      {/* Notification snackbar */}\r\n      <Snackbar\r\n        open={showNotification}\r\n        autoHideDuration={5000}\r\n        onClose={handleCloseNotification}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}\r\n      >\r\n        <Alert \r\n          onClose={handleCloseNotification} \r\n          severity=\"info\" \r\n          variant=\"filled\"\r\n          sx={{ width: '100%' }}\r\n        >\r\n          {notificationMessage}\r\n        </Alert>\r\n      </Snackbar>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PriorityAlert; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}