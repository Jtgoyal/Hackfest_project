{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\chhat\\\\supersonicsteam\\\\TaskFrontend\\\\event-sentiment-dashboard\\\\src\\\\components\\\\FeedbackStream.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Box, Typography, List, ListItem, ListItemText, CircularProgress, Divider, Chip, Avatar, IconButton, TextField, InputAdornment, FormControl, Select, MenuItem } from '@mui/material';\nimport FilterListIcon from '@mui/icons-material/FilterList';\nimport SearchIcon from '@mui/icons-material/Search';\nimport TwitterIcon from '@mui/icons-material/Twitter';\nimport InstagramIcon from '@mui/icons-material/Instagram';\nimport ChatIcon from '@mui/icons-material/Chat';\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\nimport RateReviewIcon from '@mui/icons-material/RateReview';\n\n// Define feedback item type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FeedbackStream = () => {\n  _s();\n  const [feedback, setFeedback] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [filter, setFilter] = useState('all');\n  const [searchQuery, setSearchQuery] = useState('');\n  const listRef = useRef(null);\n\n  // Initial mock data\n  const initialFeedback = [{\n    id: 1,\n    text: \"The keynote speaker was amazing! Great insights on AI in events.\",\n    source: 'twitter',\n    userName: '@eventgoer1',\n    timestamp: '2 mins ago',\n    sentiment: 'positive'\n  }, {\n    id: 2,\n    text: \"Audio in Hall B keeps cutting out. Please fix this ASAP!\",\n    source: 'in-app',\n    userName: 'Alex M.',\n    timestamp: '3 mins ago',\n    sentiment: 'negative'\n  }, {\n    id: 3,\n    text: \"Workshop registration process was smooth, but the line for coffee is too long.\",\n    source: 'review',\n    userName: 'Jamie L.',\n    timestamp: '5 mins ago',\n    sentiment: 'neutral'\n  }, {\n    id: 4,\n    text: \"When does the networking session start? The schedule says 2pm but the app says 2:30pm.\",\n    source: 'qa',\n    userName: 'Conference Attendee',\n    timestamp: '6 mins ago',\n    sentiment: 'neutral'\n  }, {\n    id: 5,\n    text: \"Loving the event vibes! #TechConference2023 #Amazing\",\n    source: 'instagram',\n    userName: '@techfan22',\n    timestamp: '8 mins ago',\n    sentiment: 'positive'\n  }, {\n    id: 6,\n    text: \"The registration queue is taking forever! Been waiting for 25 minutes already.\",\n    source: 'twitter',\n    userName: '@impatientuser',\n    timestamp: '10 mins ago',\n    sentiment: 'negative'\n  }];\n  useEffect(() => {\n    // Simulate API loading\n    const timer = setTimeout(() => {\n      setLoading(false);\n      setFeedback(initialFeedback);\n    }, 1200);\n    return () => clearTimeout(timer);\n  }, []);\n\n  // Simulate new feedback coming in regularly\n  useEffect(() => {\n    if (loading) return;\n    const newFeedbackMessages = [{\n      text: \"Main stage presentation is fantastic! Learning so much.\",\n      source: 'in-app',\n      userName: 'Taylor W.',\n      sentiment: 'positive'\n    }, {\n      text: \"There's a huge line at the food truck area. Need more options!\",\n      source: 'twitter',\n      userName: '@foodlover99',\n      sentiment: 'negative'\n    }, {\n      text: \"Session on 'Future of Event Tech' was decent. Expected more demos though.\",\n      source: 'review',\n      userName: 'Jordan K.',\n      sentiment: 'neutral'\n    }, {\n      text: \"Will the panel discussion slides be available after the event?\",\n      source: 'qa',\n      userName: 'Conference Attendee',\n      sentiment: 'neutral'\n    }, {\n      text: \"Awesome event setup and decorations! #EventDesign\",\n      source: 'instagram',\n      userName: '@designfreak',\n      sentiment: 'positive'\n    }, {\n      text: \"The WiFi keeps dropping in the east wing. Can someone fix it?\",\n      source: 'in-app',\n      userName: 'Chris T.',\n      sentiment: 'negative'\n    }];\n    const interval = setInterval(() => {\n      // Add a new random feedback item every few seconds\n      const randomIndex = Math.floor(Math.random() * newFeedbackMessages.length);\n      const newItem = newFeedbackMessages[randomIndex];\n      const newFeedbackItem = {\n        id: Date.now(),\n        text: newItem.text,\n        source: newItem.source,\n        userName: newItem.userName,\n        timestamp: 'just now',\n        sentiment: newItem.sentiment\n      };\n      setFeedback(prevFeedback => {\n        // Update timestamps for existing items\n        const updatedFeedback = prevFeedback.map(item => {\n          if (item.timestamp === 'just now') {\n            return {\n              ...item,\n              timestamp: '1 min ago'\n            };\n          } else if (item.timestamp === '1 min ago') {\n            return {\n              ...item,\n              timestamp: '2 mins ago'\n            };\n          } else {\n            // Extract the number from timestamps like \"X mins ago\"\n            const match = item.timestamp.match(/^(\\d+)/);\n            if (match) {\n              const mins = parseInt(match[1], 10);\n              return {\n                ...item,\n                timestamp: `${mins + 1} mins ago`\n              };\n            }\n            return item;\n          }\n        });\n\n        // Add new item at the top\n        return [newFeedbackItem, ...updatedFeedback.slice(0, 19)]; // Keep only the last 20 items\n      });\n\n      // Scroll to top when new item arrives\n      if (listRef.current) {\n        listRef.current.scrollTop = 0;\n      }\n    }, 8000); // Add new feedback every 8 seconds\n\n    return () => clearInterval(interval);\n  }, [loading]);\n\n  // Handle filter change\n  const handleFilterChange = event => {\n    setFilter(event.target.value);\n  };\n\n  // Handle search input change\n  const handleSearchChange = event => {\n    setSearchQuery(event.target.value);\n  };\n\n  // Filter feedback items based on selected filter and search query\n  const filteredFeedback = feedback.filter(item => {\n    const matchesFilter = filter === 'all' || filter === 'positive' && item.sentiment === 'positive' || filter === 'neutral' && item.sentiment === 'neutral' || filter === 'negative' && item.sentiment === 'negative' || filter === item.source;\n    const matchesSearch = item.text.toLowerCase().includes(searchQuery.toLowerCase()) || item.userName.toLowerCase().includes(searchQuery.toLowerCase());\n    return matchesFilter && matchesSearch;\n  });\n\n  // Get source icon\n  const getSourceIcon = source => {\n    switch (source) {\n      case 'twitter':\n        return /*#__PURE__*/_jsxDEV(TwitterIcon, {\n          fontSize: \"small\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 16\n        }, this);\n      case 'instagram':\n        return /*#__PURE__*/_jsxDEV(InstagramIcon, {\n          fontSize: \"small\",\n          sx: {\n            color: '#C13584'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 16\n        }, this);\n      case 'in-app':\n        return /*#__PURE__*/_jsxDEV(ChatIcon, {\n          fontSize: \"small\",\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 16\n        }, this);\n      case 'qa':\n        return /*#__PURE__*/_jsxDEV(QuestionAnswerIcon, {\n          fontSize: \"small\",\n          color: \"info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 16\n        }, this);\n      case 'review':\n        return /*#__PURE__*/_jsxDEV(RateReviewIcon, {\n          fontSize: \"small\",\n          color: \"action\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n\n  // Get sentiment chip\n  const getSentimentChip = sentiment => {\n    switch (sentiment) {\n      case 'positive':\n        return /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"Positive\",\n          size: \"small\",\n          sx: {\n            bgcolor: '#e8f5e9',\n            color: '#2e7d32',\n            fontWeight: 'medium'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 16\n        }, this);\n      case 'neutral':\n        return /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"Neutral\",\n          size: \"small\",\n          sx: {\n            bgcolor: '#fff8e1',\n            color: '#f57c00',\n            fontWeight: 'medium'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 16\n        }, this);\n      case 'negative':\n        return /*#__PURE__*/_jsxDEV(Chip, {\n          label: \"Negative\",\n          size: \"small\",\n          sx: {\n            bgcolor: '#ffebee',\n            color: '#c62828',\n            fontWeight: 'medium'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 16\n        }, this);\n      default:\n        return null;\n    }\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: \"300px\",\n      children: [/*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        sx: {\n          mt: 2\n        },\n        children: \"Loading feedback stream...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Live Feedback Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        size: \"small\",\n        children: /*#__PURE__*/_jsxDEV(FilterListIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      mb: 2,\n      gap: 2,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        placeholder: \"Search feedback...\",\n        variant: \"outlined\",\n        size: \"small\",\n        fullWidth: true,\n        value: searchQuery,\n        onChange: handleSearchChange,\n        InputProps: {\n          startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n            position: \"start\",\n            children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n              fontSize: \"small\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 15\n          }, this)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        size: \"small\",\n        sx: {\n          minWidth: 120\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          value: filter,\n          onChange: handleFilterChange,\n          displayEmpty: true,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"all\",\n            children: \"All Sources\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"twitter\",\n            children: \"Twitter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"instagram\",\n            children: \"Instagram\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"in-app\",\n            children: \"In-App Chat\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"qa\",\n            children: \"Q&A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"review\",\n            children: \"Reviews\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"positive\",\n            children: \"Positive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"neutral\",\n            children: \"Neutral\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"negative\",\n            children: \"Negative\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      sx: {\n        height: 'calc(100% - 130px)',\n        overflow: 'auto'\n      },\n      ref: listRef,\n      children: filteredFeedback.length > 0 ? filteredFeedback.map((item, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          alignItems: \"flex-start\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              pr: 2,\n              pt: 1\n            },\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              alt: item.userName,\n              src: item.userAvatar,\n              sx: {\n                bgcolor: item.source === 'twitter' ? '#1da1f2' : item.source === 'instagram' ? '#C13584' : item.source === 'in-app' ? '#9c27b0' : item.source === 'qa' ? '#2196f3' : '#757575'\n              },\n              children: getSourceIcon(item.source)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 315,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: /*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"subtitle2\",\n                component: \"span\",\n                children: item.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 23\n              }, this), getSentimentChip(item.sentiment)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 21\n            }, this),\n            secondary: /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"text.primary\",\n                sx: {\n                  my: 1\n                },\n                children: item.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"caption\",\n                color: \"text.secondary\",\n                children: item.timestamp\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 15\n        }, this), index < filteredFeedback.length - 1 && /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 55\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"center\",\n        py: 4,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"text.secondary\",\n          children: \"No feedback matches your filters\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 5\n  }, this);\n};\n_s(FeedbackStream, \"Zfc2jOv8PnKhwQ3RCFgIVKsiVqM=\");\n_c = FeedbackStream;\nexport default FeedbackStream;\nvar _c;\n$RefreshReg$(_c, \"FeedbackStream\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Box","Typography","List","ListItem","ListItemText","CircularProgress","Divider","Chip","Avatar","IconButton","TextField","InputAdornment","FormControl","Select","MenuItem","FilterListIcon","SearchIcon","TwitterIcon","InstagramIcon","ChatIcon","QuestionAnswerIcon","RateReviewIcon","jsxDEV","_jsxDEV","FeedbackStream","_s","feedback","setFeedback","loading","setLoading","filter","setFilter","searchQuery","setSearchQuery","listRef","initialFeedback","id","text","source","userName","timestamp","sentiment","timer","setTimeout","clearTimeout","newFeedbackMessages","interval","setInterval","randomIndex","Math","floor","random","length","newItem","newFeedbackItem","Date","now","prevFeedback","updatedFeedback","map","item","match","mins","parseInt","slice","current","scrollTop","clearInterval","handleFilterChange","event","target","value","handleSearchChange","filteredFeedback","matchesFilter","matchesSearch","toLowerCase","includes","getSourceIcon","fontSize","color","fileName","_jsxFileName","lineNumber","columnNumber","sx","getSentimentChip","label","size","bgcolor","fontWeight","display","flexDirection","alignItems","justifyContent","height","children","variant","mt","mb","gap","placeholder","fullWidth","onChange","InputProps","startAdornment","position","minWidth","displayEmpty","overflow","ref","index","Fragment","pr","pt","alt","src","userAvatar","primary","component","secondary","my","py","_c","$RefreshReg$"],"sources":["C:/Users/chhat/supersonicsteam/TaskFrontend/event-sentiment-dashboard/src/components/FeedbackStream.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { \r\n  Box, \r\n  Typography, \r\n  List, \r\n  ListItem, \r\n  ListItemText, \r\n  CircularProgress, \r\n  Divider, \r\n  Chip,\r\n  Avatar,\r\n  IconButton,\r\n  TextField,\r\n  InputAdornment,\r\n  FormControl,\r\n  Select,\r\n  MenuItem,\r\n  SelectChangeEvent\r\n} from '@mui/material';\r\nimport FilterListIcon from '@mui/icons-material/FilterList';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport TwitterIcon from '@mui/icons-material/Twitter';\r\nimport InstagramIcon from '@mui/icons-material/Instagram';\r\nimport ChatIcon from '@mui/icons-material/Chat';\r\nimport QuestionAnswerIcon from '@mui/icons-material/QuestionAnswer';\r\nimport RateReviewIcon from '@mui/icons-material/RateReview';\r\n\r\n// Define feedback item type\r\ninterface FeedbackItem {\r\n  id: number;\r\n  text: string;\r\n  source: 'twitter' | 'instagram' | 'in-app' | 'qa' | 'review';\r\n  userName: string;\r\n  timestamp: string;\r\n  sentiment: 'positive' | 'neutral' | 'negative';\r\n  userAvatar?: string;\r\n}\r\n\r\nconst FeedbackStream: React.FC = () => {\r\n  const [feedback, setFeedback] = useState<FeedbackItem[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [filter, setFilter] = useState<string>('all');\r\n  const [searchQuery, setSearchQuery] = useState<string>('');\r\n  \r\n  const listRef = useRef<HTMLUListElement>(null);\r\n\r\n  // Initial mock data\r\n  const initialFeedback: FeedbackItem[] = [\r\n    {\r\n      id: 1,\r\n      text: \"The keynote speaker was amazing! Great insights on AI in events.\",\r\n      source: 'twitter',\r\n      userName: '@eventgoer1',\r\n      timestamp: '2 mins ago',\r\n      sentiment: 'positive'\r\n    },\r\n    {\r\n      id: 2,\r\n      text: \"Audio in Hall B keeps cutting out. Please fix this ASAP!\",\r\n      source: 'in-app',\r\n      userName: 'Alex M.',\r\n      timestamp: '3 mins ago',\r\n      sentiment: 'negative'\r\n    },\r\n    {\r\n      id: 3,\r\n      text: \"Workshop registration process was smooth, but the line for coffee is too long.\",\r\n      source: 'review',\r\n      userName: 'Jamie L.',\r\n      timestamp: '5 mins ago',\r\n      sentiment: 'neutral'\r\n    },\r\n    {\r\n      id: 4,\r\n      text: \"When does the networking session start? The schedule says 2pm but the app says 2:30pm.\",\r\n      source: 'qa',\r\n      userName: 'Conference Attendee',\r\n      timestamp: '6 mins ago',\r\n      sentiment: 'neutral'\r\n    },\r\n    {\r\n      id: 5,\r\n      text: \"Loving the event vibes! #TechConference2023 #Amazing\",\r\n      source: 'instagram',\r\n      userName: '@techfan22',\r\n      timestamp: '8 mins ago',\r\n      sentiment: 'positive'\r\n    },\r\n    {\r\n      id: 6,\r\n      text: \"The registration queue is taking forever! Been waiting for 25 minutes already.\",\r\n      source: 'twitter',\r\n      userName: '@impatientuser',\r\n      timestamp: '10 mins ago',\r\n      sentiment: 'negative'\r\n    }\r\n  ];\r\n\r\n  useEffect(() => {\r\n    // Simulate API loading\r\n    const timer = setTimeout(() => {\r\n      setLoading(false);\r\n      setFeedback(initialFeedback);\r\n    }, 1200);\r\n    \r\n    return () => clearTimeout(timer);\r\n  }, []);\r\n\r\n  // Simulate new feedback coming in regularly\r\n  useEffect(() => {\r\n    if (loading) return;\r\n\r\n    const newFeedbackMessages = [\r\n      {\r\n        text: \"Main stage presentation is fantastic! Learning so much.\",\r\n        source: 'in-app' as const,\r\n        userName: 'Taylor W.',\r\n        sentiment: 'positive' as const\r\n      },\r\n      {\r\n        text: \"There's a huge line at the food truck area. Need more options!\",\r\n        source: 'twitter' as const,\r\n        userName: '@foodlover99',\r\n        sentiment: 'negative' as const\r\n      },\r\n      {\r\n        text: \"Session on 'Future of Event Tech' was decent. Expected more demos though.\",\r\n        source: 'review' as const,\r\n        userName: 'Jordan K.',\r\n        sentiment: 'neutral' as const\r\n      },\r\n      {\r\n        text: \"Will the panel discussion slides be available after the event?\",\r\n        source: 'qa' as const,\r\n        userName: 'Conference Attendee',\r\n        sentiment: 'neutral' as const\r\n      },\r\n      {\r\n        text: \"Awesome event setup and decorations! #EventDesign\",\r\n        source: 'instagram' as const,\r\n        userName: '@designfreak',\r\n        sentiment: 'positive' as const\r\n      },\r\n      {\r\n        text: \"The WiFi keeps dropping in the east wing. Can someone fix it?\",\r\n        source: 'in-app' as const,\r\n        userName: 'Chris T.',\r\n        sentiment: 'negative' as const\r\n      }\r\n    ];\r\n    \r\n    const interval = setInterval(() => {\r\n      // Add a new random feedback item every few seconds\r\n      const randomIndex = Math.floor(Math.random() * newFeedbackMessages.length);\r\n      const newItem = newFeedbackMessages[randomIndex];\r\n      \r\n      const newFeedbackItem: FeedbackItem = {\r\n        id: Date.now(),\r\n        text: newItem.text,\r\n        source: newItem.source,\r\n        userName: newItem.userName,\r\n        timestamp: 'just now',\r\n        sentiment: newItem.sentiment\r\n      };\r\n      \r\n      setFeedback((prevFeedback: FeedbackItem[]) => {\r\n        // Update timestamps for existing items\r\n        const updatedFeedback = prevFeedback.map((item: FeedbackItem) => {\r\n          if (item.timestamp === 'just now') {\r\n            return { ...item, timestamp: '1 min ago' };\r\n          } else if (item.timestamp === '1 min ago') {\r\n            return { ...item, timestamp: '2 mins ago' };\r\n          } else {\r\n            // Extract the number from timestamps like \"X mins ago\"\r\n            const match = item.timestamp.match(/^(\\d+)/);\r\n            if (match) {\r\n              const mins = parseInt(match[1], 10);\r\n              return { ...item, timestamp: `${mins + 1} mins ago` };\r\n            }\r\n            return item;\r\n          }\r\n        });\r\n        \r\n        // Add new item at the top\r\n        return [newFeedbackItem, ...updatedFeedback.slice(0, 19)]; // Keep only the last 20 items\r\n      });\r\n      \r\n      // Scroll to top when new item arrives\r\n      if (listRef.current) {\r\n        listRef.current.scrollTop = 0;\r\n      }\r\n    }, 8000); // Add new feedback every 8 seconds\r\n    \r\n    return () => clearInterval(interval);\r\n  }, [loading]);\r\n\r\n  // Handle filter change\r\n  const handleFilterChange = (event: SelectChangeEvent) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  // Handle search input change\r\n  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setSearchQuery(event.target.value);\r\n  };\r\n\r\n  // Filter feedback items based on selected filter and search query\r\n  const filteredFeedback = feedback.filter((item: FeedbackItem) => {\r\n    const matchesFilter = filter === 'all' || \r\n                         (filter === 'positive' && item.sentiment === 'positive') ||\r\n                         (filter === 'neutral' && item.sentiment === 'neutral') ||\r\n                         (filter === 'negative' && item.sentiment === 'negative') ||\r\n                         (filter === item.source);\r\n    \r\n    const matchesSearch = item.text.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n                         item.userName.toLowerCase().includes(searchQuery.toLowerCase());\r\n    \r\n    return matchesFilter && matchesSearch;\r\n  });\r\n\r\n  // Get source icon\r\n  const getSourceIcon = (source: string) => {\r\n    switch (source) {\r\n      case 'twitter':\r\n        return <TwitterIcon fontSize=\"small\" color=\"primary\" />;\r\n      case 'instagram':\r\n        return <InstagramIcon fontSize=\"small\" sx={{ color: '#C13584' }} />;\r\n      case 'in-app':\r\n        return <ChatIcon fontSize=\"small\" color=\"secondary\" />;\r\n      case 'qa':\r\n        return <QuestionAnswerIcon fontSize=\"small\" color=\"info\" />;\r\n      case 'review':\r\n        return <RateReviewIcon fontSize=\"small\" color=\"action\" />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  // Get sentiment chip\r\n  const getSentimentChip = (sentiment: string) => {\r\n    switch (sentiment) {\r\n      case 'positive':\r\n        return <Chip label=\"Positive\" size=\"small\" sx={{ bgcolor: '#e8f5e9', color: '#2e7d32', fontWeight: 'medium' }} />;\r\n      case 'neutral':\r\n        return <Chip label=\"Neutral\" size=\"small\" sx={{ bgcolor: '#fff8e1', color: '#f57c00', fontWeight: 'medium' }} />;\r\n      case 'negative':\r\n        return <Chip label=\"Negative\" size=\"small\" sx={{ bgcolor: '#ffebee', color: '#c62828', fontWeight: 'medium' }} />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Box display=\"flex\" flexDirection=\"column\" alignItems=\"center\" justifyContent=\"center\" height=\"300px\">\r\n        <CircularProgress />\r\n        <Typography variant=\"body2\" sx={{ mt: 2 }}>\r\n          Loading feedback stream...\r\n        </Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2}>\r\n        <Typography variant=\"h6\">Live Feedback Stream</Typography>\r\n        <IconButton size=\"small\">\r\n          <FilterListIcon />\r\n        </IconButton>\r\n      </Box>\r\n\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={2} gap={2}>\r\n        <TextField\r\n          placeholder=\"Search feedback...\"\r\n          variant=\"outlined\"\r\n          size=\"small\"\r\n          fullWidth\r\n          value={searchQuery}\r\n          onChange={handleSearchChange}\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <SearchIcon fontSize=\"small\" />\r\n              </InputAdornment>\r\n            ),\r\n          }}\r\n        />\r\n        \r\n        <FormControl size=\"small\" sx={{ minWidth: 120 }}>\r\n          <Select\r\n            value={filter}\r\n            onChange={handleFilterChange}\r\n            displayEmpty\r\n          >\r\n            <MenuItem value=\"all\">All Sources</MenuItem>\r\n            <MenuItem value=\"twitter\">Twitter</MenuItem>\r\n            <MenuItem value=\"instagram\">Instagram</MenuItem>\r\n            <MenuItem value=\"in-app\">In-App Chat</MenuItem>\r\n            <MenuItem value=\"qa\">Q&A</MenuItem>\r\n            <MenuItem value=\"review\">Reviews</MenuItem>\r\n            <Divider />\r\n            <MenuItem value=\"positive\">Positive</MenuItem>\r\n            <MenuItem value=\"neutral\">Neutral</MenuItem>\r\n            <MenuItem value=\"negative\">Negative</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Box>\r\n\r\n      <List sx={{ height: 'calc(100% - 130px)', overflow: 'auto' }} ref={listRef}>\r\n        {filteredFeedback.length > 0 ? (\r\n          filteredFeedback.map((item: FeedbackItem, index: number) => (\r\n            <React.Fragment key={item.id}>\r\n              <ListItem alignItems=\"flex-start\">\r\n                <Box sx={{ pr: 2, pt: 1 }}>\r\n                  <Avatar \r\n                    alt={item.userName} \r\n                    src={item.userAvatar}\r\n                    sx={{ bgcolor: item.source === 'twitter' ? '#1da1f2' : \r\n                                  item.source === 'instagram' ? '#C13584' : \r\n                                  item.source === 'in-app' ? '#9c27b0' : \r\n                                  item.source === 'qa' ? '#2196f3' : '#757575' }}\r\n                  >\r\n                    {getSourceIcon(item.source)}\r\n                  </Avatar>\r\n                </Box>\r\n                <ListItemText\r\n                  primary={\r\n                    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\">\r\n                      <Typography variant=\"subtitle2\" component=\"span\">\r\n                        {item.userName}\r\n                      </Typography>\r\n                      {getSentimentChip(item.sentiment)}\r\n                    </Box>\r\n                  }\r\n                  secondary={\r\n                    <React.Fragment>\r\n                      <Typography variant=\"body2\" color=\"text.primary\" sx={{ my: 1 }}>\r\n                        {item.text}\r\n                      </Typography>\r\n                      <Typography variant=\"caption\" color=\"text.secondary\">\r\n                        {item.timestamp}\r\n                      </Typography>\r\n                    </React.Fragment>\r\n                  }\r\n                />\r\n              </ListItem>\r\n              {index < filteredFeedback.length - 1 && <Divider variant=\"inset\" component=\"li\" />}\r\n            </React.Fragment>\r\n          ))\r\n        ) : (\r\n          <Box display=\"flex\" justifyContent=\"center\" py={4}>\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              No feedback matches your filters\r\n            </Typography>\r\n          </Box>\r\n        )}\r\n      </List>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FeedbackStream; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}